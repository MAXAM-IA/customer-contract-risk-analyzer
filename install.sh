#!/bin/bash

# Script de instalaci√≥n y configuraci√≥n para AI-CC-Risk-Analyzer
echo "üöÄ Configurando AI-CC-Risk-Analyzer con integraci√≥n LLM..."

# Verificar si Python est√° instalado
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python3 no est√° instalado. Por favor instala Python 3.8 o superior."
    exit 1
fi

echo "‚úÖ Python encontrado: $(python3 --version)"

# Crear entorno virtual si no existe
if [ ! -d "venv" ]; then
    echo "üì¶ Creando entorno virtual..."
    python3 -m venv venv
fi

# Activar entorno virtual
echo "üîß Activando entorno virtual..."
source venv/bin/activate

# Instalar dependencias
echo "üì• Instalando dependencias..."
pip install --upgrade pip
pip install -r requirements.txt

# Verificar configuraci√≥n de API Key
echo "üîë Verificando configuraci√≥n..."
if [ -z "$GOOGLE_API_KEY" ]; then
    echo "‚ö†Ô∏è  Advertencia: GOOGLE_API_KEY no est√° configurada."
    echo "   Para usar la funcionalidad LLM, configura la variable de entorno:"
    echo "   export GOOGLE_API_KEY='tu_clave_de_api_aqui'"
    echo ""
    echo "   O crea un archivo .env en el directorio ra√≠z con:"
    echo "   GOOGLE_API_KEY=tu_clave_de_api_aqui"
else
    echo "‚úÖ GOOGLE_API_KEY configurada correctamente"
fi

echo ""
echo "üéâ Instalaci√≥n completada!"
echo ""
echo "Para iniciar el sistema:"
echo "1. Backend (FastAPI): cd fastapi_backend && uvicorn main:app --reload"
echo "2. Frontend (Streamlit): streamlit run src/main.py"
echo ""
echo "El sistema estar√° disponible en:"
echo "- Backend API: http://localhost:8000"
echo "- Frontend: http://localhost:8501"
